<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiezh.dao.leads.client.ProductDao">
  <resultMap id="BaseResultMap" type="com.jiezh.dao.leads.client.ProductVO">
    <id column="ID" jdbcType="DECIMAL" property="id" />
    <result column="ABNAME" jdbcType="VARCHAR" property="abname" />
    <result column="PNAME" jdbcType="VARCHAR" property="pname" />
    <result column="PDESCRIBE" jdbcType="VARCHAR" property="pdescribe" />
    <result column="PDETAIL" jdbcType="VARCHAR" property="pdetail" />
    <result column="PID" jdbcType="DECIMAL" property="pid" />
    <result column="HAS_CHILD" jdbcType="VARCHAR" property="hasChild" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, ABNAME, PNAME, PDESCRIBE, PDETAIL, PID,HAS_CHILD
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from LM_PRODUCT
    where ID = #{id,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from LM_PRODUCT
    where ID in(select id from lm_product t start with t.id = #{id,jdbcType=DECIMAL} connect by prior t.id = t.pid)
  </delete>
  <insert id="insert" parameterType="com.jiezh.dao.leads.client.ProductVO">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      select S_LM_PRODUCT_ID.Nextval as id from dual 
    </selectKey>
    insert into LM_PRODUCT (ID,ABNAME, PNAME, PDESCRIBE, 
      PDETAIL, PID,HAS_CHILD,roles)
    values (#{id,jdbcType=DECIMAL},#{abname,jdbcType=VARCHAR}, #{pname,jdbcType=VARCHAR}, #{pdescribe,jdbcType=VARCHAR}, 
      #{pdetail,jdbcType=VARCHAR}, #{pid,jdbcType=DECIMAL},#{hasChild,jdbcType=VARCHAR},#{roles,jdbcType=VARCHAR})
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.jiezh.dao.leads.client.ProductVO">
    update LM_PRODUCT
    <set >
      <if test="abname != null" >
        ABNAME = #{abname,jdbcType=VARCHAR},
      </if>
      <if test="pname != null" >
        PNAME = #{pname,jdbcType=VARCHAR},
      </if>
      <if test="hasChild != null" >
        HAS_CHILD = #{hasChild,jdbcType=VARCHAR},
      </if>
      <if test="roles != null" >
        ROLES = #{roles,jdbcType=VARCHAR},
      </if>


    </set>
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <select id="queryProducts"  resultType="map" >
	 SELECT ID,ABNAME NAME,PID,HAS_CHILD HASCHILD,ROLES ROLES FROM lm_product t
	 <where>
	 	<foreach collection="roles" item="role" separator="or" open="(" close=")">
	 		instr(t.roles,#{role,jdbcType=VARCHAR}) >0
	 	</foreach>
	 </where>
	 order by ID
   
  </select>
  
  <select id="queryRootProducts"  resultType="map">
	 SELECT ID,ABNAME NAME,PID FROM lm_product where pid='0'
	 order by ID
  </select>

  <!-- add by cj 根据PID获取产品所有子项-->
  <select id="queryChildProductsByPid" resultType="map" parameterType="java.lang.Long">
	 SELECT ID,ABNAME NAME,PID FROM lm_product where pid=#{pid,jdbcType=DECIMAL}
	 order by ID
  </select>
  
  <select id="selectFileDir" parameterType="map" resultType="map">
  	select t.sysvar_value FILEDIR from t_sysvar t where t.sysvar_code = #{sysvarCode,jdbcType=VARCHAR}
  </select>
</mapper>